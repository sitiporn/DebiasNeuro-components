{
  # ******************** LOAD STUFF ********************
  # "model_name": "../bert-base-uncased/",
  "collect_representation": False,
  "top_neuron_mode": "sorted",
  "dataset_name": "mnli",
  "DEBUG": True,
  "debug": False, 
  "num_samples": 300,
  "upper_bound": 95,
  "lower_bound": 5,
  # "label_maps": {"contradiction": 0, "entailment": 1, "neutral": 2}, # ishan-bert-mnli 
  "label_maps": {"entailment": 0, "contradiction": 1, "neutral": 2}, # Ours
  "layers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],
  "heads": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],
  
  # ******************** PATH ********************
  "num_top_neurons": null, 
  "range_percents": True, 
  'neurons': True, 
  "model_name": "/ist-project/scads/sit/bert-base-uncased-mnli/",
  "dev_path": "../data/nli/",
  "exp_json": "multinli_1.0_dev_matched.jsonl",
  "dev_json": {},
  # data settings
  "counterfactual_paths": [],
  "NIE_paths": [],
  "is_NIE_exist": [],
  "is_counterfactual_exist": [],
  # ************ Identifying Bias: Causal Mediation Analysis *************
  # experiment set 
  "k":  5, 
  # rank based on nie scores 
  "eval_candidates": False,
  "layer": 11,
  "treatment": True,
  "is_group_by_class": False,
  "is_averaged_embeddings": True,
  "intervention_type": "weaken",
  "computed_all_layers": True,
  "print_config": False,
  # ['3990', '409', '1548', '3099', '3785'] for experiments
  # "seed": null, # null: for ishan-bert-nil model
  "seed": 3785, 
  # default
  # "topk_neurons": True,
  # together with compute all seeds
  "get_candidate_neurons": True,
  "distribution": False,
  # To get counterfactual
  "compute_all_seeds": True,
  "eval_counterfactual": False,
  "getting_counterfactual": False,
  "compute_nie_scores": False,
  # ******************** soft masking neurons ********************
  # we mask top 5% neurons
  "weaken_rate": 0.0, # best score on has (0.6299)
  # "weaken_rate": 0.1,
  # "weaken_rate": 0.97,
  # "weaken_rate": 1.0,
  # "weaken_rate": null,
  "get_masking_value": False,
  # percent of neurons to mask
  "masking_rate": 0.005, 
  # number of neurons to mask
  "neuron_group": null,
  "rank_losses": False, 
  # range 0.0 to 0.10, step = 0.01
  # searching masking rates
  "percent": {
    "low": 0.01, 
    "high": 0.1,
    "step": 0.025,
    "size": 1,
    "mode": 0o666,
    "acc": {}
    },
  # range 0 to 1, step = 0.1
  "epsilons": {
    "low":  0, 
    "high": 1.1,
    "step": 0.1, #0.0001, #0.01, 0.1,
    "size": 10,
    "mode": 0o666,
    "acc": {}
    },
  "single_neuron": False,
  # do hyperparameter search on value used modify neurons's activations
  "soft_masking_value_search": False,
  # do hyperparameter search on the percentages of all neurons to mask
  "masking_rate_search": False,
  "get_condition_inferences": True,
  "get_condition_inference_scores": True,
  # ******************** test  stuff ********************
  "eval_model": True,

  "traced": False, 
  "traced_params": False,
  "diag": False,
  # "diag": True,
  "test_traced_params": False,
  "debias_test": False,
  # "dev-name": "matched",
  # test set
  # "dev-name": "mismatched",
  # challenge set
  "dev-name": "hans",
  # this set uses matched dataset
  # "dev-name": "reweight",
  # "dev-name": "matched",
  # if know best params
  # "weaken": null,

  # evaluate hans
  "eval": {
    "do": 'High-overlap',
    "layer": 11,
    "debug": False,
    "all_layers": True,
    "intervention_mode": "Intervene"
    },

  # uppper bound test on test set
  # use to read prediction txt files
  "prediction_path": '../pickles/prediction/',
  "evaluations":  {},
  "to_text": True,
  # "get_result": False,
  "get_condition_hans_result": False,
  "get_hans_result": True,
  "save_rank": True,
  # neurons components
  "attention_components": 3,
  "nums": {},
    # Tokenizer
  "tokens": {
    "type": "pretrained_transformer",
    "model_name": "/ist-project/scads/sit/bert-base-uncased-mnli/", 
    "max_length": 512
  },


}




    
         
